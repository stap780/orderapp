Виджет для pbxes - звонка с карточки заказа

1) HTML и скрипт
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <style>
     
    </style>
  </head>
  <body>
    <form action="http://pbxes.org/callteletri" METHOD="GET">
    <input type="text" name="n" id='phone_number'>
    <input type="hidden" name="embed" value="1">
    <input type="submit" value="Call">
    </form>
    <p>Номер заказа: <b><span id='order_number'><span></b></p>
    
    <script>

      // устанавливаем номер заказа, используя number из переменной window.order_info
      var order_number_field = document.getElementById('order_number');
      order_number_field.innerHTML = window.order_info.number;

     // устанавливаем номер телефона, используя client.phone из переменной window.order_info
      var order_phone_field = document.getElementById('phone_number');
      order_phone_field.value = window.order_info.client.phone;      

    </script>
  </body>
  </html>
2) Добавление виджета в платформу
Перед тем как передать html код виджета через API в InSales, нужно предварительно заменить все символы '<' и '>' на соответствующие '&lt;' и '&gt;'. Для этого можно воспользоваться сервисом http://www.htmlescape.net/htmlescape_tool.html
После преобразования, добаляем наш виджет в InSales
Запрос на создание виджета: POST /admin/application_widgets.xml

Пример запроса на редактирование виджета: PUT - http://a2e2ed5ba6560944845dbf38f2223298:0e734e3c93ca9795f87313c83c5ebbcf@worksys.myinsales.ru/admin/application_widgets/13110.xml

3) Пример виджета
Разместим на странице заказа слово "Номер"
а) HTML:
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
  <html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <style>
     
    </style>
  </head>
  <body>
  <p>Номер отслеживания: <span id='courierNumber'></span></p>
  <p>Курьерка: <span id='courierName'></span></p>
  <p>Статус: <span id='courierStatus'></span></p>
    <script>
      var courierNumber = document.getElementById('courierNumber');
  var courierName = document.getElementById('courierName');
  var courierStatus = document.getElementById('courierStatus');
  function mycallback(input_object) {
        data = input_object;
  }
var script_element = document.createElement('script');

// Set its source to the JSONP API
script_element.src = 'http://188.166.111.118:3000/iorders.json?callback=mycallback';

// Stick the script element in the page 
document.getElementsByTagName('head')[0].appendChild(script_element);
script_element.onload = function() {  
                
  //console.log(data[0].track);
      //courierNumber.innerHTML = data[0].number;
     for ( var i = 0; i<data.length; i++ ) { 
      
  var number = data[i].number;
  if (data[i].number == window.order_info.number){
  
  courierNumber.innerHTML = data[i].track;
  courierName.innerHTML = data[i].courierName;
  courierStatus.innerHtml = data[i].status;
  }
  }
  
  }
    </script>
  </body>
  </html>

б) Конвертируем через http://www.htmlescape.net/htmlescape_tool.html :

в) Отправляем запрос на создание виджета:
Запрос POST на адрес http://a2e2ed5ba6560944845dbf38f2223298:0e734e3c93ca9795f87313c83c5ebbcf@worksys.myinsales.ru/admin/application_widgets.xml
И в запросе передаем
<application-widget>
<code>
  &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
  &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;Номер отслеживания: &lt;span id='courierNumber'&gt;&lt;span&gt;&lt;/p&gt;
  &lt;p&gt;КС: &lt;span id='courierName'&gt;&lt;span&gt;&lt;/p&gt;
  &lt;p&gt;Статус: &lt;span id='courierStatus'&gt;&lt;span&gt;&lt;/p&gt;

    &lt;script&gt;
     
      var courierNumber = document.getElementById('courierNumber');
  var courierName = document.getElementById('courierName');
  var courierStatus = document.getElementById('courierStatus');
  function mycallback(input_object) {
        data = input_object;
  }
var script_element = document.createElement('script');

// Set its source to the JSONP API
script_element.src = 'http://188.166.111.118:3000/iorders.json?callback=mycallback';

// Stick the script element in the page 
document.getElementsByTagName('head')[0].appendChild(script_element);
script_element.onload = function() {  
                
  //console.log(data[0].track);
      //courierNumber.innerHTML = data[0].number;
  
  for ( var i = 0; i&lt;data.length; i++ ) {
  var number = data[i].number;
  if (data[i].number == window.order_info.number){
  
  courierNumber.innerHTML = data[i].track;
  courierName.innerHTML = data[i].courierName;
  courierStatus.innerHtml = data[i].status;
  }
  }
  
  }    
      
    &lt;/script&gt;
  &lt;/body&gt;
  &lt;/html&gt;
</code>
<height>110</height>
</application-widget>
3.1) Изменение виджета
PUT запрос в виджет. Пример - http://a2e2ed5ba6560944845dbf38f2223298:0e734e3c93ca9795f87313c83c5ebbcf@worksys.myinsales.ru/admin/application_widgets/17997.xml
4) Проверяем работу
5) Данный 
6) На стороне сервера делаем дополнения в контроллере класса

(Вариант А)
class ImlsController < ApplicationController

after_filter { |controller| handle_jsonp(controller) }

def json_work
@imls = Iml.all
imls = @imls.to_json
render :json => imls, :callback => params[:mycallback] #ниже написан метод для формирования правильного ответа JSONP
end

private
    
def handle_jsonp(controller)
 if controller.params[:callback]
   controller.response['Content-Type'] = 'application/javascript'
   controller.response.body = "#{controller.params[:callback]}(#{controller.response.body})"
 end
end
(Вариант Б)
Используем json.jbuilder создаём файл во view - index.json.jbuilder - c содержимым

json.array! @iorders do |iorder|
  json.number iorder.number
  if !iorder.iml_id.nil?
	json.courierName 'IML'	  
  json.track iorder.iml.barcode
  json.status iorder.iml.state
  else
  if !iorder.dpd_id.nil?
	json.courierName 'DPD'	  
  json.track iorder.dpd.dpdnumber
  json.status iorder.dpd.state
  else
  	json.courierName 'not available'	  
  json.track 'not available'
  json.status 'not available'
  end
  end
  
end
И в контроллере добавляем
respond_to do |format|
format.html
format.json 
end


_____________
<application-widget>
<code><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/></head><body><p>Номер отслеживания: <span id='courierNumber'><span></p><p>Курьерка: <span id='courierName'><span></p><p>Статус: <span id='courierStatus'><span></p><script> var courierNumber = document.getElementById('courierNumber'); var courierName = document.getElementById('courierName'); var courierStatus = document.getElementById('courierStatus'); function mycallback(input_object) { data = input_object; } var script_element = document.createElement('script'); // Set its source to the JSONP API script_element.src = 'http://188.166.111.118:3000/iorders.json?callback=mycallback'; // Stick the script element in the page document.getElementsByTagName('head')[0].appendChild(script_element); script_element.onload = function() { //console.log(data[0].track); //courierNumber.innerHTML = data[0].number; for ( var i = 0; i<data.length; i++ ) { var number = data[i].number; if (data[i].number == window.order_info.number){ courierNumber.innerHTML = data[i].track; courierName.innerHTML = data[i].courierName; courierStatus.innerHTML = data[i].status; } } } </script></body></html></code>
<created-at type="datetime">2016-07-05T23:25:31+03:00</created-at>
<height type="integer">130</height>
<id type="integer">17997</id>
<page-type>order</page-type>
 </application-widget>